{"ast":null,"code":"// Centralized API utility for all agent calls\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const fetchMarketData = (tickers, period, interval) => {\n  // Always send tickers as a list, even if user enters a comma-separated string\n  const tickerList = typeof tickers === 'string' ? tickers.split(',').map(t => t.trim()).filter(Boolean) : Array.isArray(tickers) ? tickers : [];\n  return axios.post(`${API_URL}/marketdata/run`, {\n    tickers: tickerList,\n    period,\n    interval\n  });\n};\n\n// Add similar functions for other agents as you build out the UI","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","fetchMarketData","tickers","period","interval","tickerList","split","map","t","trim","filter","Boolean","Array","isArray","post"],"sources":["C:/dev/stack._market_trendAgent/frontend-react/src/api.js"],"sourcesContent":["// Centralized API utility for all agent calls\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n\r\nexport const fetchMarketData = (tickers, period, interval) => {\r\n  // Always send tickers as a list, even if user enters a comma-separated string\r\n  const tickerList = typeof tickers === 'string'\r\n    ? tickers.split(',').map(t => t.trim()).filter(Boolean)\r\n    : Array.isArray(tickers) ? tickers : [];\r\n  return axios.post(`${API_URL}/marketdata/run`, {\r\n    tickers: tickerList,\r\n    period,\r\n    interval\r\n  });\r\n};\r\n\r\n// Add similar functions for other agents as you build out the UI\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAGxE,OAAO,MAAMC,eAAe,GAAGA,CAACC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,KAAK;EAC5D;EACA,MAAMC,UAAU,GAAG,OAAOH,OAAO,KAAK,QAAQ,GAC1CA,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,GACrDC,KAAK,CAACC,OAAO,CAACX,OAAO,CAAC,GAAGA,OAAO,GAAG,EAAE;EACzC,OAAON,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,iBAAiB,EAAE;IAC7CK,OAAO,EAAEG,UAAU;IACnBF,MAAM;IACNC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}