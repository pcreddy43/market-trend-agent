{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\stack._market_trendAgent\\\\frontend-react\\\\src\\\\components\\\\SocialSentimentTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Box, CircularProgress, Typography, Grid } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport InsightBox from './InsightBox';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport default function SocialSentimentTab() {\n  _s();\n  var _mostPositive, _mostNegative;\n  const [subreddits, setSubreddits] = useState('stocks,wallstreetbets');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchSentiment = async () => {\n    setLoading(true);\n    try {\n      const resp = await axios.post(`${API_URL}/socialsentiment/run`, {\n        subreddits: subreddits.split(',').map(s => s.trim()).filter(Boolean)\n      });\n      setData(resp.data.result || []);\n    } catch (e) {\n      setData([]);\n    }\n    setLoading(false);\n  };\n\n  // Compute insights\n  let mostPositive = null,\n    mostNegative = null,\n    avgSentiment = null;\n  if (data.length > 0) {\n    const sorted = [...data].sort((a, b) => (b.sentiment || 0) - (a.sentiment || 0));\n    mostPositive = sorted[0];\n    mostNegative = sorted[sorted.length - 1];\n    avgSentiment = (data.reduce((sum, d) => sum + (d.sentiment || 0), 0) / data.length).toFixed(2);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Subreddits (comma-separated)\",\n      value: subreddits,\n      onChange: e => setSubreddits(e.target.value),\n      sx: {\n        mr: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchSentiment,\n      disabled: loading,\n      variant: \"contained\",\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this) : 'Fetch Sentiment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mt: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(InsightBox, {\n            title: \"Total Posts\",\n            value: data.length,\n            color: \"#1976d2\",\n            description: \"Posts analyzed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(InsightBox, {\n            title: \"Avg. Sentiment\",\n            value: avgSentiment,\n            color: \"#388e3c\",\n            description: \"Average sentiment score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(InsightBox, {\n            title: \"Most Positive Post\",\n            value: ((_mostPositive = mostPositive) === null || _mostPositive === void 0 ? void 0 : _mostPositive.title) || 'N/A',\n            color: \"#43a047\",\n            description: mostPositive ? `Score: ${mostPositive.sentiment}` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(InsightBox, {\n            title: \"Most Negative Post\",\n            value: ((_mostNegative = mostNegative) === null || _mostNegative === void 0 ? void 0 : _mostNegative.title) || 'N/A',\n            color: \"#e53935\",\n            description: mostNegative ? `Score: ${mostNegative.sentiment}` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Social Sentiment Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: data.map((row, i) => ({\n            id: i,\n            ...row\n          })),\n          columns: [{\n            field: 'subreddit',\n            headerName: 'Subreddit',\n            width: 150\n          }, {\n            field: 'title',\n            headerName: 'Title',\n            width: 300\n          }, {\n            field: 'score',\n            headerName: 'Score',\n            width: 100\n          }, {\n            field: 'sentiment',\n            headerName: 'Sentiment',\n            width: 120\n          }],\n          autoHeight: true,\n          pageSize: 5,\n          rowsPerPageOptions: [5, 10, 20]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(SocialSentimentTab, \"xDXrqy9fbWuiIstPqEMCoMu4Ljk=\");\n_c = SocialSentimentTab;\nvar _c;\n$RefreshReg$(_c, \"SocialSentimentTab\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Box","CircularProgress","Typography","Grid","DataGrid","InsightBox","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","SocialSentimentTab","_s","_mostPositive","_mostNegative","subreddits","setSubreddits","data","setData","loading","setLoading","fetchSentiment","resp","post","split","map","s","trim","filter","Boolean","result","e","mostPositive","mostNegative","avgSentiment","length","sorted","sort","a","b","sentiment","reduce","sum","d","toFixed","children","label","value","onChange","target","sx","mr","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","variant","size","container","spacing","mt","mb","item","title","color","description","rows","row","i","id","columns","field","headerName","width","autoHeight","pageSize","rowsPerPageOptions","_c","$RefreshReg$"],"sources":["C:/dev/stack._market_trendAgent/frontend-react/src/components/SocialSentimentTab.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, CircularProgress, Typography, Grid } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport InsightBox from './InsightBox';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nexport default function SocialSentimentTab() {\r\n  const [subreddits, setSubreddits] = useState('stocks,wallstreetbets');\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchSentiment = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const resp = await axios.post(`${API_URL}/socialsentiment/run`, {\r\n        subreddits: subreddits.split(',').map(s => s.trim()).filter(Boolean)\r\n      });\r\n      setData(resp.data.result || []);\r\n    } catch (e) {\r\n      setData([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Compute insights\r\n  let mostPositive = null, mostNegative = null, avgSentiment = null;\r\n  if (data.length > 0) {\r\n    const sorted = [...data].sort((a, b) => (b.sentiment || 0) - (a.sentiment || 0));\r\n    mostPositive = sorted[0];\r\n    mostNegative = sorted[sorted.length - 1];\r\n    avgSentiment = (data.reduce((sum, d) => sum + (d.sentiment || 0), 0) / data.length).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TextField label=\"Subreddits (comma-separated)\" value={subreddits} onChange={e => setSubreddits(e.target.value)} sx={{ mr: 2 }} />\r\n      <Button onClick={fetchSentiment} disabled={loading} variant=\"contained\">\r\n        {loading ? <CircularProgress size={20} /> : 'Fetch Sentiment'}\r\n      </Button>\r\n      {data.length > 0 && (\r\n        <>\r\n          <Grid container spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n            <Grid item>\r\n              <InsightBox\r\n                title=\"Total Posts\"\r\n                value={data.length}\r\n                color=\"#1976d2\"\r\n                description=\"Posts analyzed\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <InsightBox\r\n                title=\"Avg. Sentiment\"\r\n                value={avgSentiment}\r\n                color=\"#388e3c\"\r\n                description=\"Average sentiment score\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <InsightBox\r\n                title=\"Most Positive Post\"\r\n                value={mostPositive?.title || 'N/A'}\r\n                color=\"#43a047\"\r\n                description={mostPositive ? `Score: ${mostPositive.sentiment}` : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <InsightBox\r\n                title=\"Most Negative Post\"\r\n                value={mostNegative?.title || 'N/A'}\r\n                color=\"#e53935\"\r\n                description={mostNegative ? `Score: ${mostNegative.sentiment}` : ''}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <Typography variant=\"h6\">Social Sentiment Table</Typography>\r\n            <DataGrid\r\n              rows={data.map((row, i) => ({ id: i, ...row }))}\r\n              columns={[\r\n                { field: 'subreddit', headerName: 'Subreddit', width: 150 },\r\n                { field: 'title', headerName: 'Title', width: 300 },\r\n                { field: 'score', headerName: 'Score', width: 100 },\r\n                { field: 'sentiment', headerName: 'Sentiment', width: 120 }\r\n              ]}\r\n              autoHeight\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10, 20]}\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAC1F,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,aAAA;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,uBAAuB,CAAC;EACrE,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM4B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,IAAI,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,GAAGhB,OAAO,sBAAsB,EAAE;QAC9DQ,UAAU,EAAEA,UAAU,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO;MACrE,CAAC,CAAC;MACFX,OAAO,CAACI,IAAI,CAACL,IAAI,CAACa,MAAM,IAAI,EAAE,CAAC;IACjC,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVb,OAAO,CAAC,EAAE,CAAC;IACb;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,IAAIY,YAAY,GAAG,IAAI;IAAEC,YAAY,GAAG,IAAI;IAAEC,YAAY,GAAG,IAAI;EACjE,IAAIjB,IAAI,CAACkB,MAAM,GAAG,CAAC,EAAE;IACnB,MAAMC,MAAM,GAAG,CAAC,GAAGnB,IAAI,CAAC,CAACoB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,CAACC,SAAS,IAAI,CAAC,KAAKF,CAAC,CAACE,SAAS,IAAI,CAAC,CAAC,CAAC;IAChFR,YAAY,GAAGI,MAAM,CAAC,CAAC,CAAC;IACxBH,YAAY,GAAGG,MAAM,CAACA,MAAM,CAACD,MAAM,GAAG,CAAC,CAAC;IACxCD,YAAY,GAAG,CAACjB,IAAI,CAACwB,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,IAAIC,CAAC,CAACH,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGvB,IAAI,CAACkB,MAAM,EAAES,OAAO,CAAC,CAAC,CAAC;EAChG;EAEA,oBACExC,OAAA,CAACP,GAAG;IAAAgD,QAAA,gBACFzC,OAAA,CAACT,SAAS;MAACmD,KAAK,EAAC,8BAA8B;MAACC,KAAK,EAAEhC,UAAW;MAACiC,QAAQ,EAAEjB,CAAC,IAAIf,aAAa,CAACe,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAACG,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClInD,OAAA,CAACR,MAAM;MAAC4D,OAAO,EAAEnC,cAAe;MAACoC,QAAQ,EAAEtC,OAAQ;MAACuC,OAAO,EAAC,WAAW;MAAAb,QAAA,EACpE1B,OAAO,gBAAGf,OAAA,CAACN,gBAAgB;QAAC6D,IAAI,EAAE;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG;IAAiB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EACRtC,IAAI,CAACkB,MAAM,GAAG,CAAC,iBACd/B,OAAA,CAAAE,SAAA;MAAAuC,QAAA,gBACEzC,OAAA,CAACJ,IAAI;QAAC4D,SAAS;QAACC,OAAO,EAAE,CAAE;QAACX,EAAE,EAAE;UAAEY,EAAE,EAAE,CAAC;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAlB,QAAA,gBAC/CzC,OAAA,CAACJ,IAAI;UAACgE,IAAI;UAAAnB,QAAA,eACRzC,OAAA,CAACF,UAAU;YACT+D,KAAK,EAAC,aAAa;YACnBlB,KAAK,EAAE9B,IAAI,CAACkB,MAAO;YACnB+B,KAAK,EAAC,SAAS;YACfC,WAAW,EAAC;UAAgB;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPnD,OAAA,CAACJ,IAAI;UAACgE,IAAI;UAAAnB,QAAA,eACRzC,OAAA,CAACF,UAAU;YACT+D,KAAK,EAAC,gBAAgB;YACtBlB,KAAK,EAAEb,YAAa;YACpBgC,KAAK,EAAC,SAAS;YACfC,WAAW,EAAC;UAAyB;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPnD,OAAA,CAACJ,IAAI;UAACgE,IAAI;UAAAnB,QAAA,eACRzC,OAAA,CAACF,UAAU;YACT+D,KAAK,EAAC,oBAAoB;YAC1BlB,KAAK,EAAE,EAAAlC,aAAA,GAAAmB,YAAY,cAAAnB,aAAA,uBAAZA,aAAA,CAAcoD,KAAK,KAAI,KAAM;YACpCC,KAAK,EAAC,SAAS;YACfC,WAAW,EAAEnC,YAAY,GAAG,UAAUA,YAAY,CAACQ,SAAS,EAAE,GAAG;UAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPnD,OAAA,CAACJ,IAAI;UAACgE,IAAI;UAAAnB,QAAA,eACRzC,OAAA,CAACF,UAAU;YACT+D,KAAK,EAAC,oBAAoB;YAC1BlB,KAAK,EAAE,EAAAjC,aAAA,GAAAmB,YAAY,cAAAnB,aAAA,uBAAZA,aAAA,CAAcmD,KAAK,KAAI,KAAM;YACpCC,KAAK,EAAC,SAAS;YACfC,WAAW,EAAElC,YAAY,GAAG,UAAUA,YAAY,CAACO,SAAS,EAAE,GAAG;UAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACPnD,OAAA,CAACP,GAAG;QAACqD,EAAE,EAAE;UAAEY,EAAE,EAAE;QAAE,CAAE;QAAAjB,QAAA,gBACjBzC,OAAA,CAACL,UAAU;UAAC2D,OAAO,EAAC,IAAI;UAAAb,QAAA,EAAC;QAAsB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5DnD,OAAA,CAACH,QAAQ;UACPmE,IAAI,EAAEnD,IAAI,CAACQ,GAAG,CAAC,CAAC4C,GAAG,EAAEC,CAAC,MAAM;YAAEC,EAAE,EAAED,CAAC;YAAE,GAAGD;UAAI,CAAC,CAAC,CAAE;UAChDG,OAAO,EAAE,CACP;YAAEC,KAAK,EAAE,WAAW;YAAEC,UAAU,EAAE,WAAW;YAAEC,KAAK,EAAE;UAAI,CAAC,EAC3D;YAAEF,KAAK,EAAE,OAAO;YAAEC,UAAU,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAI,CAAC,EACnD;YAAEF,KAAK,EAAE,OAAO;YAAEC,UAAU,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAI,CAAC,EACnD;YAAEF,KAAK,EAAE,WAAW;YAAEC,UAAU,EAAE,WAAW;YAAEC,KAAK,EAAE;UAAI,CAAC,CAC3D;UACFC,UAAU;UACVC,QAAQ,EAAE,CAAE;UACZC,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;QAAE;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3C,EAAA,CAxFuBD,kBAAkB;AAAAoE,EAAA,GAAlBpE,kBAAkB;AAAA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}